//
//  ToDoListViewController.swift
//  CleanToDoList
//
//  Created by Panpan Han  on 2019/3/5.
//  Copyright (c) 2019 Panpan Han . All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ToDoListDisplayLogic: class
{
  func fetchItemsSuccess(todos: ToDoListModel.ToDoList)
}

class ToDoListViewController: UITableViewController, ToDoListDisplayLogic
{
  var interactor: ToDoListBusinessLogic?
  var router: (ToDoListRoutingLogic & ToDoListDataPassing)?
  
  var dataSource: ToDoListModel.ToDoList?
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = ToDoListInteractor()
    let presenter = ToDoListPresenter()
    let router = ToDoListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    interactor?.fetchToDos()
  }
  
  
  func fetchItemsSuccess(todos: ToDoListModel.ToDoList) {
    dataSource = todos
  }
  
  // MARK: - Table view data source
  
  override func numberOfSections(in tableView: UITableView) -> Int {
    return 1
  }
  
  override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return dataSource?.todos.count ?? 0
  }
  
  override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
    let cell = tableView.dequeueReusableCell(withIdentifier: "todoCell", for: indexPath) as! ToDoTableViewCell
    cell.setLabe(labelContent: dataSource?.todos[indexPath.row].content ?? "")
    return cell
  }
  
  @IBAction func onClick(_ sender: Any) {
    router?.navigateToCreatePage()
  }
}
